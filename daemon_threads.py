import time
import threading


""" Пишу функцию,которую буду запускать через поток. currentThread() - получение текущего потока.
 Так как эта ф-я работает в текущем потоке, то мы можем исп-ть методы данного потока и атрибуты"""


def get_data(data):
    for _ in range(5):
        print(f'[{threading.currentThread().name}] - {data}')
        time.sleep(1)


thr = threading.Thread(target=get_data, args=(str(time.time()),), daemon=True)
thr.start()
print('finish')

""" По итогу работы кода можно сделать вывод, что сначала идет основной поток (finish),
а фоном идет первый мой поток, вроде бы основной отработал, но ручные потоки продолжают выполняться.
Так будет всегда. Даже если прога закончила работу, другие потоки последовательно все равно выполнятся.
Для того чтобы при завершении основного потока остальные потоки также завершились, их нужно сделать daemon.
Сделать это можно через аргумент daemon метода Thread. Задать daemon можно также через setDaemon() и объект thr"""